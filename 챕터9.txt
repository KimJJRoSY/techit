#Css next level

*float 
-떠오르다->자식이 부모로부터 떠남 => 마진을 없앰
=> 자식 요소의 width값 자체가 바뀌는게 아니라 부모 요소의 width값 만큼 margin이 생기는 것 

If,가로배치가 되지 않고 겹쳐지는 요소들 ==> 가로 배치하고 싶은 요소들에 전부 float 선언
flaot: right;   =>우측 정렬

#Clear
페이지 레이아웃 짜다가 contents가 범람 했을 때 
float로 없어진 마진 영역을 없어지지 않도록 대응하는 역할 == clear

#ClearFix
clear라는 속성으로 레이아웃을 바로잡는 기법
(범람을 막고 싶은 요소)::after{     
    content: "";
    disply: block;
    clear: both;
}

#Flex

flexBox

#position
-static:모든 요소의 디폴트 값 ==생성된 원래 위치
-relative:원래 위치를 기준으로 요소를 움직일 때 사용
-absolute:position이 static이 아닌 가장 가까운 부모 요소를 기준으로 함 ==아무런 부모 요소 없으면 => body를 기준으로 위치를 움직임
->요소에 absolute가 적용되면 float 등으로 발생하는 요소 간의 관계 무시 =>전체적인 흐름에서 벗어나 부모를 기준으로 위치만 변경
fixed:브라우저 창을 기준으로 고정된 위치
-sticky: 스크롤로 특정 위치에 도달하면 고정 

#Grid
:격자 무늬
container :그리드 시스템이 적용될 영역
row: 행,가로,부분, float된 column 요소가 흘 넘치지 않게 하는 역할 
